<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:security="http://www.springframework.org/schema/security"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xsi:schemaLocation="
      http://www.springframework.org/schema/security 
      http://www.springframework.org/schema/security/spring-security-4.1.xsd
      http://www.springframework.org/schema/beans 
      http://www.springframework.org/schema/beans/spring-beans-4.1.xsd">
 
<!--    	<beans:bean id="springSecurityFilterChain" class="com.isc.project.controllers.SecurityCheck"></beans:bean> -->
	<security:http auto-config="true" use-expressions="true">
		<security:intercept-url pattern="/" access="hasRole('ROLE_USER')" />
      	<security:intercept-url pattern="/home" access="isAnonymous()" />
      	<security:intercept-url pattern="/account" access="isAuthenticated()"/>
      	<security:intercept-url pattern="/products/save" access="hasRole('ROLE_EMPLOYEE')"/>
      	<security:intercept-url pattern="/brands/save" access="hasRole('ROLE_EMPLOYEE')"/>
      	<security:intercept-url pattern="/categories/save" access="hasRole('ROLE_EMPLOYEE')"/>
      	<security:intercept-url pattern="/signup" access="isAnonymous()"/>
		<security:form-login  login-page="/login" username-parameter="ssoId" password-parameter="password" authentication-failure-url="/loginfailed"/>
      	<security:logout logout-success-url="/login?logout" />
      	<security:csrf disabled="true"/>
   </security:http>
   
   <security:authentication-manager>
      <security:authentication-provider>
		 <security:jdbc-user-service data-source-ref="dataSource"
		 	users-by-username-query="select username,password, true from users where username=?"
		 	authorities-by-username-query="select u.username, ur.role from users u left join userroles ur on u.id = ur.userid where u.username =? " />
      </security:authentication-provider>
   </security:authentication-manager>
   
</beans:beans>